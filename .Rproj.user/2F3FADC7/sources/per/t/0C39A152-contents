library(readxl)
library(readr)
library(dplyr)

setwd("~/OneDrive_mrkmarton/-/Dinamikus Kiválóság Menedzsment - General/Stats, R/R/Martys gas")

gaz <- read_excel("gaz.xlsx", sheet = "Mero_rendetlen")

gaz <- gaz %>% 
         rename( Value = Mérő, 
                       Date = Dátum, 
                       Gas = Gáz, 
                       Day = Nap) %>%
         mutate( Date = as_date(Date, origin = "1899-12-30"))

#View(gaz)

weather <- read_csv("weather.csv") %>%
             mutate(range = tmax-tmin)

temps_xtra <- expand.grid( hour = 1:24,
                           date = weather$date,
                           temp = 0
                           ) %>%
  mutate(actdate = date + hour/24)

for (i in 1:nrow(temps_xtra)) {
  temps_xtra$temp[i] <- weather$tmin[weather$date == temps_xtra$date[i]] + 
    ( sin( (temps_xtra$hour[i]-6)/12*3.14159) + 1) *
    weather$range[weather$date == temps_xtra$date[i]]/2
}

plot(temps_xtra$temp,type="l")

gaz <- gaz %>%
  mutate( datelag = lag(Date),
          tsum = 0)

for (i in 1:nrow(gaz)) {
  gaz$tsum[i] <- sum( temps_xtra$temp[ temps_xtra$date > gaz$datelag[i] &
                                 temps_xtra$date < gaz$Date[i] ])
  
}

gaz <- gaz %>%
  mutate( tper = tsum / as.numeric(Date - datelag) / 24,
          datemiddle = Date + as.numeric(Date - datelag)/2,
          ywint = ifelse(  yday(datemiddle) < 185, year( datemiddle), year( datemiddle)+1) %>% as.factor)

gaz <- gaz[1:121,]

plot(gaz$tper, gaz$Rate)

mod <- lm( Rate ~ ns( tper, df = 3), gaz)

mod %>% effects::predictorEffects( residuals = TRUE) %>% plot()

mod2 <- gls( Rate ~ ns( tper, df = 3) + ywint, 
             gaz
             ,weights = varExp(value = .1)
             ,correlation = corARMA( form = ~ datemiddle,
                                     p = 0, q = 2)
             ,na.action = "na.omit"
             ,control = glsControl(msMaxIter = 200))

mod2 %>% effects::predictorEffects( residuals = TRUE) %>% plot()

summary(mod2)

car::vif(mod2)
plot(mod2)
qqnorm(mod2, abline = c(0,1))
acf( resid( mod2))
acf( resid( mod2, type = 'normalized'))


predict( mod2, newdata = data.frame( tper = 0))




